"use strict";var precacheConfig=[["/wikilayers/index.html","5a96a1751e74ad600b538328a628e760"],["/wikilayers/static/css/main.ecf012c2.css","800893360bb701ddd4abe6f8986b2096"],["/wikilayers/static/js/0.df8da3f7.chunk.js","5b23bb41cc378a51315489bc3d9f8254"],["/wikilayers/static/js/1.b8266c49.chunk.js","33d98ffa1896399020b2d5945707b8c4"],["/wikilayers/static/js/2.cc8bbd73.chunk.js","3f112ac73ec268885884fbddfd07f6cd"],["/wikilayers/static/js/3.21b67105.chunk.js","1ad9b6ecae80bab33703ca7bf987a5a3"],["/wikilayers/static/js/4.bdd2abe6.chunk.js","21e7e41e3b9d00929bf59e4373ca2881"],["/wikilayers/static/js/5.835b0df5.chunk.js","7ca1d6da9fbc7e8f0ff5983e9d3c7b60"],["/wikilayers/static/js/main.e619a1ea.js","52d1ca40f36d3a45c45c30954311d550"],["/wikilayers/static/media/geolocation.6d2ff796.svg","6d2ff7969031aeaaae21e6aa16adc401"],["/wikilayers/static/media/lakes.155cd268.topojson","155cd26880ac7317b2913927263e235a"],["/wikilayers/static/media/place.51115316.svg","51115316b373e0e7e56b896514081567"],["/wikilayers/static/media/selectedPlace.c3663994.svg","c366399475d2c4aba715b6f94d1302db"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/wikilayers/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});